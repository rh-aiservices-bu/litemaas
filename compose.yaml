version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: litemaas-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: litemaas
      POSTGRES_USER: litemaas_admin
      POSTGRES_PASSWORD: litemaas_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - litemaas-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U litemaas_admin -d litemaas"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Containerfile
    container_name: litemaas-backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # Database
      DATABASE_URL: postgresql://litemaas_admin:litemaas_password@postgres:5432/litemaas
      
      # Server
      HOST: 0.0.0.0
      PORT: 8080
      NODE_ENV: production
      LOG_LEVEL: info
      
      # CORS - allow frontend container
      CORS_ORIGIN: http://frontend:8080
      
      # JWT
      JWT_SECRET: your-production-jwt-secret-here
      JWT_EXPIRES_IN: 24h
      
      # OAuth (configure for your environment)
      OAUTH_CLIENT_ID: litemaas-client
      OAUTH_CLIENT_SECRET: your-oauth-secret
      OAUTH_ISSUER: https://your-oauth-provider
      OAUTH_CALLBACK_URL: http://localhost:8080/api/auth/callback
      
      # Admin API Keys
      ADMIN_API_KEYS: ltm_admin_prod_example123456789
      
      # LiteLLM
      LITELLM_API_URL: http://litellm:4000
      LITELLM_API_KEY: sk-1234
      
      # Rate Limiting
      RATE_LIMIT_MAX: 1000
      RATE_LIMIT_TIME_WINDOW: 5m
    ports:
      - "8080:8080"
    networks:
      - litemaas-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Web Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Containerfile
      args:
        VITE_API_URL: http://localhost:8080
        VITE_OAUTH_CLIENT_ID: litemaas-client
        VITE_OAUTH_REDIRECT_URL: http://localhost:8080/auth/callback
        VITE_APP_NAME: LiteMaaS
        VITE_APP_VERSION: 1.0.0
    container_name: litemaas-frontend
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "3000:8080"
    networks:
      - litemaas-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # LiteLLM Service (optional - for development)
  litellm:
    image: ghcr.io/berriai/litellm:main-stable
    container_name: litemaas-litellm
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://litemaas_admin:litemaas_password@postgres:5432/litellm
      LITELLM_MASTER_KEY: sk-1234
      UI_USERNAME: admin
      UI_PASSWORD: admin
      LITELLM_MODE: PRODUCTION
      STORE_MODEL_IN_DB: "True"
    ports:
      - "4000:4000"
    networks:
      - litemaas-network
    volumes:
      - litellm_data:/app/data

volumes:
  postgres_data:
    driver: local
  litellm_data:
    driver: local

networks:
  litemaas-network:
    driver: bridge 