# LiteMaaS Backend Environment Configuration
# Copy this to .env and update values for your environment

# Server Configuration
NODE_ENV=development
PORT=8081
HOST=0.0.0.0
LOG_LEVEL=info

# Database Configuration
DATABASE_URL=postgresql://user:password@localhost:5432/litemaas

# Test Database Configuration
# Tests ALWAYS use a separate database to prevent contamination of development data.
# The test database is hardcoded in vitest.config.ts.
# DO NOT point this at your development or production database!
# See backend/CLAUDE.md for test database setup instructions.
TEST_DATABASE_URL=postgresql://pgadmin:thisisadmin@localhost:5432/litemaas_test

# OAuth Configuration
OAUTH_CLIENT_ID=your-openshift-oauth-client-id
OAUTH_CLIENT_SECRET=your-openshift-oauth-client-secret
OAUTH_ISSUER=https://your-openshift-cluster.com

# OAuth Callback URL Configuration
# The application now supports automatic callback URL detection based on the request origin.
# OAUTH_CALLBACK_URL serves as a fallback when automatic detection is not possible.
#
# IMPORTANT: Register ALL possible callback URLs with your OAuth provider:
# - Development (Vite): http://localhost:3000/api/auth/callback
# - Development (Direct): http://localhost:8081/api/auth/callback, http://localhost:8081/api/auth/callback
# - Container (NGINX): http://localhost:8081/api/auth/callback
# - Production: https://your-domain.com/api/auth/callback
#
# The callback URL used during authorization is stored and reused during token exchange
# to ensure OAuth compliance (redirect_uri must match exactly in both requests).
#
# Set this to your primary development URL:
OAUTH_CALLBACK_URL=http://localhost:3000/api/auth/callback

# Kubernetes API TLS Verification
# ⚠️ WARNING: Only enable this in development or with trusted clusters!
# Skip TLS certificate verification for Kubernetes API calls (OAuth user info endpoint)
# This is useful when the K8s API endpoint (https://api.<cluster>:6443) lacks proper SSL certificates
# while Ingress/Routes have valid certificates.
# Default: SSL verification enabled (secure)
# K8S_API_SKIP_TLS_VERIFY=true


# JWT Configuration
JWT_SECRET=your-super-secret-jwt-key
JWT_EXPIRES_IN=24h

# LiteLLM Configuration
LITELLM_API_URL=http://your-litellm-instance:8000
LITELLM_API_KEY=your-litellm-api-key

# LiteLLM Sync
LITELLM_AUTO_SYNC=true
LITELLM_SYNC_INTERVAL=60

# Backend API Rate Limiting (NOT for LLM requests)
# These limits protect LiteMaaS management endpoints from abuse
# They control access to user management, API key creation, etc.
# LLM request limits are configured separately via DEFAULT_USER_TPM_LIMIT/RPM_LIMIT
RATE_LIMIT_MAX=1000                    # Max backend API calls per time window
RATE_LIMIT_TIME_WINDOW=5m             # Time window for backend API limits

# CORS Configuration
CORS_ORIGIN=http://localhost:3000

# Admin API Keys (comma-separated list)
ADMIN_API_KEYS=ltm_admin_dev123,ltm_admin_prod456

# Allowed frontend origins for bypass (development and testing)
# In production, implement proper JWT authentication instead
ALLOWED_FRONTEND_ORIGINS=localhost:3000,localhost:3001,127.0.0.1:3000,127.0.0.1:3001

# Default User Values Configuration (for LLM requests via LiteLLM)
# These values are applied to new users when they first log in
# They control LLM usage limits, NOT backend API access
DEFAULT_USER_MAX_BUDGET=100           # Budget in USD for LLM usage
DEFAULT_USER_TPM_LIMIT=100000         # Tokens per minute for LLM requests
DEFAULT_USER_RPM_LIMIT=120            # Requests per minute for LLM requests

# Quick Reference:
# - RATE_LIMIT_* = Protects LiteMaaS backend APIs (login, user mgmt, etc.)
# - DEFAULT_USER_*_LIMIT = Controls LLM request rates through LiteLLM

# ============================================================================
# Admin Analytics Configuration
# ============================================================================

# Cache Configuration
# TTL for current day cache (minutes)
# Lower values = fresher data, higher API load
# Default: 5 minutes
# Recommendation: 3-15 minutes
ADMIN_ANALYTICS_CACHE_CURRENT_DAY_TTL_MINUTES=5

# TTL for historical cache (days, effectively permanent)
# Historical data is immutable
# Default: 365 days
ADMIN_ANALYTICS_CACHE_HISTORICAL_TTL_DAYS=365

# Batch size for cache rebuilds
# Higher values = faster rebuild, more memory
# Default: 100 days
# Recommendation: 50-200 days
ADMIN_ANALYTICS_CACHE_REBUILD_BATCH_SIZE=100

# Log warning if cache exceeds this size (MB)
# Default: 100 MB
ADMIN_ANALYTICS_CACHE_SIZE_WARNING_MB=100

# Grace period for midnight boundary handling (minutes)
# Prevents historical cache from getting short TTL when rebuild spans midnight
# Default: 5 minutes
# Recommendation: 3-10 minutes
ADMIN_ANALYTICS_CACHE_GRACE_PERIOD_MINUTES=5

# Trend Analysis
# Percentage change threshold for "stable" trend (%)
# Changes below this are considered stable
# Default: 1.0%
# Recommendation: 0.5-2.0%
ADMIN_ANALYTICS_TREND_STABILITY_THRESHOLD=1.0

# Decimal places for trend calculations
# Default: 2
# Recommendation: 1-4
ADMIN_ANALYTICS_TREND_PRECISION=2

# Pagination
# Default items per page
# Default: 50
# Recommendation: 25-100
ADMIN_ANALYTICS_DEFAULT_PAGE_SIZE=50

# Maximum items per page
# Default: 500
# Recommendation: 100-1000
ADMIN_ANALYTICS_MAX_PAGE_SIZE=500

# Minimum items per page
# Default: 10
# Recommendation: 5-25
ADMIN_ANALYTICS_MIN_PAGE_SIZE=10

# Top N Limits
# Number of top users to show
# Default: 10
# Recommendation: 5-50
ADMIN_ANALYTICS_TOP_USERS_LIMIT=10

# Number of top models to show
# Default: 10
# Recommendation: 5-50
ADMIN_ANALYTICS_TOP_MODELS_LIMIT=10

# Number of top providers to show
# Default: 5
# Recommendation: 3-20
ADMIN_ANALYTICS_TOP_PROVIDERS_LIMIT=5

# Export Limits
# Maximum rows in export
# Default: 10000
# Recommendation: 1000-100000
ADMIN_ANALYTICS_MAX_EXPORT_ROWS=10000

# Maximum export file size (MB)
# Default: 50
# Recommendation: 10-500
ADMIN_ANALYTICS_MAX_EXPORT_FILE_SIZE_MB=50

# Warning Thresholds
# Log warning for date ranges exceeding this (days)
# Default: 30
# Recommendation: 14-90 days
ADMIN_ANALYTICS_LARGE_DATE_RANGE_WARNING_DAYS=30

# Date Range Limits
# Maximum date range for analytics queries (days)
# Queries requesting ranges larger than this will be rejected with 400 error
# Default: 90 days (approximately 3 months)
# Recommendation: 30-180 days based on use case
ADMIN_ANALYTICS_MAX_ANALYTICS_DAYS=90

# Maximum date range for data exports (days)
# Exports requesting ranges larger than this will be rejected with 400 error
# Default: 365 days (1 year)
# Recommendation: 180-730 days based on use case
ADMIN_ANALYTICS_MAX_EXPORT_DAYS=365
